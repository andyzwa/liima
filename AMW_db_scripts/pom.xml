<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>ch.puzzle.itc.mobiliar</groupId>
		<artifactId>AMW_parent</artifactId>
		<version>1.14.1-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<artifactId>AMW_db_scripts</artifactId>
	<name>AMW_db_scripts</name>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
		<version.jboss.spec.javaee.6.0>1.0.7.Final</version.jboss.spec.javaee.6.0>

		<!-- dependency versions -->
		<version.h2>1.4.181</version.h2>
		<version.pg>9.4-1200-jdbc41</version.pg>
		<version.ora>11.2.0.3</version.ora>
		
		<version.hibernate4-maven-plugin>1.0.5</version.hibernate4-maven-plugin>
		<version.ant-contrib>20020829</version.ant-contrib>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>

		<db>h2</db>
		<goal>updateSQL</goal>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<!-- Define the version of JBoss' Java EE 6 APIs we want to use -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss EAP that implements Java EE 6. -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${version.jboss.spec.javaee.6.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss EAP 6 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss EAP 6 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Servlet API, we use provided scope as the API is included 
			in JBoss EAP 6 -->
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-cdi</artifactId>
			<version>${version.liquibase}</version>
		</dependency>


		<dependency>
			<!-- logging adapter to prevent liquibase from logging to stderr -->
			<groupId>com.mattbertolini</groupId>
			<artifactId>liquibase-slf4j</artifactId>
			<version>${version.liquibase-slf4j}</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${version.h2}</version>
		</dependency>
		
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		    <version>${version.pg}</version>
		</dependency>
		
		<dependency>
			<groupId>ch.puzzle.itc.mobiliar</groupId>
			<artifactId>AMW_business</artifactId>
			<version>1.14.1-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	
	<build>
		<!-- Set the name of the war, used as the context root when the app is 
			deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>liquibaseora</id>
			<activation>
				<property>
					<name>db</name>
					<value>ora</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>${version.ora}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>liquibaseoralocal</id>
			<activation>
				<property>
					<name>db</name>
					<value>ora.local</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>${version.ora}</version>
				</dependency>
			</dependencies>
		</profile>
        <profile>
            <id>liquibasecompare</id>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>

                <plugins>
                    <plugin>
                        <groupId>de.juplo</groupId>
                        <artifactId>hibernate4-maven-plugin</artifactId>
                        <version>${version.hibernate4-maven-plugin}</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>export</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <force>true</force>
                            <hibernateDialect>org.hibernate.dialect.Oracle10gDialect</hibernateDialect>
                            <hibernateProperties>${project.build.outputDirectory}/liquibase/hibernate.maven-plugin.properties</hibernateProperties>
                            <target>EXPORT</target>
                            <envers>true</envers>
                            <outputDirectory>../AMW_business/build/classes</outputDirectory>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>ch.puzzle.itc.mobiliar</groupId>
                                <artifactId>AMW_business</artifactId>
                                <version>1.14.1-SNAPSHOT</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
		<profile>
			<id>liquibase</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
					</resource>
				</resources>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>initializeLiquibase</id>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
										<mkdir dir="${project.build.directory}/liquibase" />
										<if>
											<equals arg1="${goal}" arg2="generateChangeLog" />
											<then>
												<delete>
													<fileset dir="${project.build.directory}/liquibase" includes="generated*.xml" />
												</delete>
											</then>
										</if>
										<if>
											<equals arg1="${goal}" arg2="diff" />
											<then>
												<delete>
													<fileset dir="${project.build.directory}/liquibase" includes="diff.changelog.xml" />
												</delete>
											</then>
										</if>
									</tasks>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${version.ant-contrib}</version>
							</dependency>
						</dependencies>
					</plugin>

					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${version.liquibase}</version>
						<configuration>
							<propertyFileWillOverride>true</propertyFileWillOverride>
							<propertyFile>${project.build.outputDirectory}/liquibase/liquibase-${db}.properties</propertyFile>
							<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
							<migrationSqlOutputFile>${project.build.directory}/liquibase/migrate${project.artifactId}-${project.version}.sql</migrationSqlOutputFile>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>  <!-- Variable substitution in goal only works in profiles. -->
									<goal>${goal}</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>
